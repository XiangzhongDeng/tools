

set nocompatible              " 去除VI一致性,必须
filetype off                  " 必须

"指定python3的版本，防止插件报错
set pythonthreedll=S:/Program_SoftWare/Python/Python39/python39.dll


" 设置包括vundle和初始化相关的runtime path，重要！！
set rtp+=S:/vim/vim90/bundle/Vundle.vim

" 指定一个vundle安装插件的路径，重要！！
call vundle#begin('S:/vim/vim90/bundle')

" 让vundle管理插件版本,必须
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'junegunn/vim-easy-align' "vim easy-align插件使用
Plugin 'bling/vim-airline' 
Plugin 'HonkW93/automatic-verilog'
Plugin 'dense-analysis/ale'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'scrooloose/nerdcommenter'
Plugin 'Shougo/neocomplcache.vim'


call vundle#end()            " 插件管理结束标志，必须
filetype plugin indent on    " 必须 加载vim自带和插件相应的语法和文件类型相关脚本
" 忽视插件改变缩进,可以使用以下替代:
"filetype plugin on
"
" 简要帮助文档
" :PluginList       - 列出所有已配置的插件
" :PluginInstall    - 安装插件,追加 `!` 用以更新或使用 :PluginUpdate
" :PluginSearch foo - 搜索 foo ; 追加 `!` 清除本地缓存
" :PluginClean      - 清除未使用插件,需要确认; 追加 `!` 自动批准移除未使用插件
"
" 查阅 :h vundle 获取更多细节和wiki以及FAQ
" 将你自己对非插件片段放在这行之后




syntax on  "语法高亮度显示 

if has('gui_running') && has("win32")
    au GUIEnter * simalt ~x
endif

set noerrorbells " 不让vim发出讨厌的滴滴声 

set shortmess=ati " 启动的时候不显示那个援助索马里儿童的提示 

set t_Co=256  "开启256色支持

set hlsearch  "搜索设置高亮

colorscheme desert "配色方案

set background=dark "配置主题整体的色调，只有两个选择：dark和light（暗色调和亮色调）

highlight Function cterm=bold,underline ctermbg=red ctermfg=green "color set
set nu  "显示行号

set relativenumber "显示相对行号

set cursorcolumn "add cursor in column

set cursorline "add cursor in line 

set guifont=Source_Code_Pro:i:h14       "gui style

"set guifont=Courier_new:h12

set lines=35 columns=118 "其中lines是窗口显示的行数，columns是窗口显示的列数

winpos 200 100 "后面两个参数指的自屏幕左上角像素值参考位置

set tabstop=4 "tab键相当于4个空格键

set expandtab "來將 tab 转成 space  combine with tabstop

set shiftwidth=4 "换行自动变为空格

set autoindent "设置自动缩进  自动缩进，当你第一行敲 tab + 文字 回车后 下一行自动给你加个 tab 

set backspace=2 "enable backspace

set novisualbell "不要闪烁

set laststatus=2 "启动显示状态行

set encoding=utf-8 "文件编码

set completeopt=menu,preview,longest "自动补全相关的设置

"不要生成swap文件，当buffer被丢弃的时候隐藏它

setlocal noswapfile

set bufhidden=hide


inoremap ( ()<ESC>i
inoremap [ []<ESC>i

"ban up and also keys 
"imap <Up> <Nop>
"imap <Down> <Nop>
"imap <Left> <Nop>
"imap <Right> <Nop>
"nmap <Up> <Nop>
"nmap <Down> <Nop>
"nmap <Left> <Nop>
"nmap <Right> <Nop>

imap jk <ESC> g,"在编辑模式下使用jk替代ESC进入命令模式
imap <C-L> <C-X><C-L> “使用CTRL L 代替 CTRL X ＋CTRL L 就是整个句子的补全
nmap ,l ^
nmap ,r $


"snippet
let g:atv_snippet_st_pos = 0
let g:atv_snippet_rst = 'rstn'
let g:atv_snippet_author = 'NightVoyager'
let g:atv_snippet_email = 'dxz.nv@qq.com'

map ;ati      :call g:AutoInst(0)<ESC>
map ;atl      :call g:AutoInst(1)<ESC>

"let g:UltiSnipsExpandTrigger = "<tab>"
"let g:UltiSnipsListSnippets = "<c-tab>"
"let g:UltiSnipsJumpForwardTrigger = "<tab>"
"let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"


"ale
"始终开启标志列
let g:ale_sign_column_always = 1
let g:ale_set_highlights = 0
"自定义error和warning图标
let g:ale_sign_error = '✗'
let g:ale_sign_warning = '⚡'
"在vim自带的状态栏中整合ale
let g:ale_statusline_format = ['✗ %d', '⚡ %d', '✔ OK']
"显示Linter名称,出错或警告等相关信息
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
"普通模式下，sp前往上一个错误或警告，sn前往下一个错误或警告
nmap sp <Plug>(ale_previous_wrap)
nmap sn <Plug>(ale_next_wrap)
"<Leader>s触发/关闭语法检查
nmap <Leader>s :ALEToggle<CR>
"<Leader>d查看错误或警告的详细信息
nmap <Leader>d :ALEDetail<CR>


"-----------------------------------------------------------------------------
" NERDTree
"-----------------------------------------------------------------------------
map <leader>ne :NERDTreeToggle<CR>
" 目录树窗口尺寸
let g:NERDTreeWinSize = 25
" 关闭nerd帮助
" let g:NERDTreeMinimalUI = 1
" 忽略以下文件的显示
let NERDTreeIgnore=['\.pyc','\~$','\.swp']
" 显示书签列表
let NERDTreeShowBookmarks=1
" 显示隐藏文件
let NERDTreeShowHidden=1
" 修改默认箭头符号
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
augroup NERDTree
    au!
    autocmd vimenter * NERDTree     " vim启动时自动打开NERDTree
    " vim启动打开目录时自动打开NERDTree
    autocmd StdinReadPre * let s:std_in=1
    autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
    autocmd vimenter * NERDTreeFind 
    " 文件全部关闭时退出NERDTree
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
augroup END

map <F2> :NERDTreeMirror<CR>
map <F2> :NERDTreeToggle<CR>

wincmd w
autocmd VimEnter * wincmd w

"-----------------------------------------------------------------------------
" neocomplcache
"-----------------------------------------------------------------------------
let g:neocomplcache_enable_at_startup = 1 "作用：在系统启动的时候启动neo  
let g:neocomplcache_enable_auto_select = 1 "作用：提示的时候默认选择地一个，如果你设置为0，每次输入都需要用上下键选择

"-----------------------------------------------------------------------------
"nerdcommenter
"-----------------------------------------------------------------------------
let mapleader = ","



"-----------------------------------------------------------------------------
" easyalign
"-----------------------------------------------------------------------------
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

"-----------------------------------------------------------------------------
"vtag
"-----------------------------------------------------------------------------
source S:/vim/vim90/bundle/vtags-3.01/vtags_vim_api.vim